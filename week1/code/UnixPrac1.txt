#1 Count how many lines there are in each file 
# Using wc -l to count word, line only
wc -l 407228412.fasta
wc -l 407228326.fasta
wc -l E.coli.fasta
wc -l *.fasta

#2 Print everything starting from the second line for the E.coli genome 
# Using tail -n +2 to start printing from line 2 onward
tail -n 78102 E.coli.fasta
tail -n +2 E.coli.fasta

#3 Count the sequence length of this genome
# tail -n +2 the same, removes the header line and then using tr to deletes newline characters to make the DNA one long continuous string. After that, using wc -c to count characters
tail -n +2 E.coli.fasta | tr -d '\n' | wc -c

#4 Count the matches of a particular sequence, “ATGC” in the genome of E. coli (hint: Start by removing the first line and removing newline characters)
# First two steps are the same. Using grep -o to find all occurrences of "ATGC"
tail -n +2 E.coli.fasta | tr -d '\n' | grep -o "ATGC" | wc -l

#5 Compute the AT/GC ratio. That is, the (A+T)/(G+C) ratio (as a single number). This is a summary measure of base composition of double-stranded DNA. DNA from different organisms and lineages has different ratios of the A-to-T and G-to-C base pairs (google “Chargaff’s rule”). For example, DNA from organisms that live in hot springs have a higher GC content, the GC base pair is more thermally stable.
# Count each base and compute (A+T)/(G+C). Using echo to print and calculate
A=$(tail -n +2 E.coli.fasta | tr -d '\n' | grep -o "A" | wc -l)
T=$(tail -n +2 E.coli.fasta | tr -d '\n' | grep -o "T" | wc -l)
G=$(tail -n +2 E.coli.fasta | tr -d '\n' | grep -o "G" | wc -l)
C=$(tail -n +2 E.coli.fasta | tr -d '\n' | grep -o "C" | wc -l)
echo "scale=3; ($A+$T)/($G+$C)" | bc


